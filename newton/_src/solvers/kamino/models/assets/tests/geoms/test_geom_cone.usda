#usda 1.0
(
    doc = """Authored manually for testing purposes."""
    defaultPrim = "test_geom_cone"
    timeCodesPerSecond = 1000
    kilogramsPerUnit = 1
    metersPerUnit = 1
    upAxis = "Z"
)

def PhysicsScene "World"
{
    float physics:gravityMagnitude = 9.8067
    vector3f physics:gravityDirection = (0, 0, -1)
}

def Xform "Robot"
{
    def Scope "RigidBodies"
    {
        def Xform "body_0" (
            prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI"]
        )
        {
            # Body Frame
            quatf xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

            # Body Velocities
            vector3f physics:linearVelocity = (0, 0, 0)
            vector3f physics:angularVelocity = (0, 0, 0)

            # Mass Properties
            float physics:mass = 1.0
            float3 physics:diagonalInertia = (1, 1, 1)
            point3f physics:centerOfMass = (0, 0, 0)
            quatf physics:principalAxes = (1, 0, 0, 0)

            # Body Geometry
            def Scope "Geometry"
            {
                def Cone "collision_cone" (
                    # NOTE: We add these only for collidable geometries
                    prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI"]
                    customData = {int maxContacts = 10}
                )
                {
                    double radius = 0.1
                    double height = 2.2
                    float3 xformOp:scale = (1, 1, 1)
                    quatf xformOp:orient = (1, 0, 0, 0)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                }

                def Cone "physical_cone"
                {
                    double radius = 0.2
                    double height = 3.3
                    float3 xformOp:scale = (1, 1, 1)
                    quatf xformOp:orient = (1, 0, 0, 0)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                }
            }
        }
    }
}
