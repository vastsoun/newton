#usda 1.0
(
    doc = """Authored manually for testing purposes."""
    defaultPrim = "test_joint_revolute_passive"
    timeCodesPerSecond = 1000
    kilogramsPerUnit = 1
    metersPerUnit = 1
    upAxis = "Z"
)

def PhysicsScene "World"
{
    float physics:gravityMagnitude = 9.8067
    vector3f physics:gravityDirection = (0, 0, -1)
}

def Xform "Robot"
{
    def Scope "RigidBodies"
    {
        def Xform "body_0" (
            prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI"]
        )
        {
            # Body Frame
            quatf xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

            # Body Velocities
            vector3f physics:linearVelocity = (0, 0, 0)
            vector3f physics:angularVelocity = (0, 0, 0)

            # Mass Properties
            float physics:mass = 1.0
            float3 physics:diagonalInertia = (1, 1, 1)
            point3f physics:centerOfMass = (0, 0, 0)
            quatf physics:principalAxes = (1, 0, 0, 0)
        }

        def Xform "body_1" (
            prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI"]
        )
        {
            # Body Frame
            quatf xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:translate = (1, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

            # Body Velocities
            vector3f physics:linearVelocity = (0, 0, 0)
            vector3f physics:angularVelocity = (0, 0, 0)

            # Mass Properties
            float physics:mass = 1.0
            float3 physics:diagonalInertia = (1, 1, 1)
            point3f physics:centerOfMass = (0, 0, 0)
            quatf physics:principalAxes = (1, 0, 0, 0)
        }
    }

    def Scope "Joints"
    {
        def PhysicsRevoluteJoint "passive_revolute_joint"
        {
            bool physics:jointEnabled = 1

            rel physics:body0 = </Robot/RigidBodies/body_0>
            rel physics:body1 = </Robot/RigidBodies/body_1>

            uniform token physics:axis = "Y"

            point3f physics:localPos0 = (0, 0, 0)
            point3f physics:localPos1 = (-0.5, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)

            float physics:lowerLimit = -90  # NOTE: The presence of these properties enables the UsdPhysics.JointLimit(...) attribute
            float physics:upperLimit = 90

            bool physics:collisionEnabled = 0
        }
    }
}
